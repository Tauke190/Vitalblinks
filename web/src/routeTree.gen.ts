/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLayoutImport } from './routes/auth/_layout'
import { Route as AuthLoginIndexImport } from './routes/auth/login/index'
import { Route as AuthLoginForgotPasswordIndexImport } from './routes/auth/login/forgot-password/index'
import { Route as AuthLoginForgotPasswordVerifyImport } from './routes/auth/login/forgot-password/verify'

// Create Virtual Routes

const AuthImport = createFileRoute('/auth')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginForgotPasswordIndexRoute =
  AuthLoginForgotPasswordIndexImport.update({
    id: '/login/forgot-password/',
    path: '/login/forgot-password/',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthLoginForgotPasswordVerifyRoute =
  AuthLoginForgotPasswordVerifyImport.update({
    id: '/login/forgot-password/verify',
    path: '/login/forgot-password/verify',
    getParentRoute: () => AuthRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_layout': {
      id: '/auth/_layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof AuthRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof AuthImport
    }
    '/auth/login/forgot-password/verify': {
      id: '/auth/login/forgot-password/verify'
      path: '/login/forgot-password/verify'
      fullPath: '/auth/login/forgot-password/verify'
      preLoaderRoute: typeof AuthLoginForgotPasswordVerifyImport
      parentRoute: typeof AuthImport
    }
    '/auth/login/forgot-password/': {
      id: '/auth/login/forgot-password/'
      path: '/login/forgot-password'
      fullPath: '/auth/login/forgot-password'
      preLoaderRoute: typeof AuthLoginForgotPasswordIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthLoginForgotPasswordVerifyRoute: typeof AuthLoginForgotPasswordVerifyRoute
  AuthLoginForgotPasswordIndexRoute: typeof AuthLoginForgotPasswordIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLayoutRoute: AuthLayoutRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthLoginForgotPasswordVerifyRoute: AuthLoginForgotPasswordVerifyRoute,
  AuthLoginForgotPasswordIndexRoute: AuthLoginForgotPasswordIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthLayoutRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/': typeof AuthIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/login/forgot-password/verify': typeof AuthLoginForgotPasswordVerifyRoute
  '/auth/login/forgot-password': typeof AuthLoginForgotPasswordIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthIndexRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/login/forgot-password/verify': typeof AuthLoginForgotPasswordVerifyRoute
  '/auth/login/forgot-password': typeof AuthLoginForgotPasswordIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/_layout': typeof AuthLayoutRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/': typeof AuthIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/login/forgot-password/verify': typeof AuthLoginForgotPasswordVerifyRoute
  '/auth/login/forgot-password/': typeof AuthLoginForgotPasswordIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/auth/register'
    | '/auth/'
    | '/auth/login'
    | '/auth/login/forgot-password/verify'
    | '/auth/login/forgot-password'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/auth/register'
    | '/auth/login'
    | '/auth/login/forgot-password/verify'
    | '/auth/login/forgot-password'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/auth/_layout'
    | '/auth/register'
    | '/auth/'
    | '/auth/login/'
    | '/auth/login/forgot-password/verify'
    | '/auth/login/forgot-password/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_layout",
        "/auth/register",
        "/auth/",
        "/auth/login/",
        "/auth/login/forgot-password/verify",
        "/auth/login/forgot-password/"
      ]
    },
    "/auth/_layout": {
      "filePath": "auth/_layout.tsx",
      "parent": "/auth"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx",
      "parent": "/auth"
    },
    "/auth/": {
      "filePath": "auth/index.tsx",
      "parent": "/auth"
    },
    "/auth/login/": {
      "filePath": "auth/login/index.tsx",
      "parent": "/auth"
    },
    "/auth/login/forgot-password/verify": {
      "filePath": "auth/login/forgot-password/verify.tsx",
      "parent": "/auth"
    },
    "/auth/login/forgot-password/": {
      "filePath": "auth/login/forgot-password/index.tsx",
      "parent": "/auth"
    }
  }
}
ROUTE_MANIFEST_END */
